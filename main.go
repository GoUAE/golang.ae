package main

import (
	"context"
	"flag"
	"log"
	"net/http"
	"os"

	"github.com/a-h/templ"
	"github.com/gouae/golang.ae/template"
)

func main() {
	portFlag := flag.String("port", "8080", "The port to listen on")
	staticFlag := flag.Bool("static", false, "Generates a static `index.html` file containing the site, in the cwd")

	flag.Parse()

	indexTempl := template.Index()

	if *staticFlag {
		f, err := os.Create("index.html")
		if err != nil {
			log.Fatalf("Failed to create file `index.html`, %v", err)
		}

		err = generateStaticHTML(f, indexTempl)
		if err != nil {
			log.Fatalf("Failed to write to file `index.html`, %v", err)
		}

		return
	}

	mux := http.NewServeMux()

	mux.HandleFunc("GET /", func(w http.ResponseWriter, r *http.Request) {
		err := indexTempl.Render(context.Background(), w)
		if err != nil {
			http.Error(w, "Failed to render `index.html`", 500)
			return
		}
	})

	mux.HandleFunc("GET /favicon.ico", func(w http.ResponseWriter, r *http.Request) {
		http.ServeFile(w, r, "./public/favicon.ico")
	})

	log.Printf("Server is running on http://localhost:%s\n", *portFlag)
	log.Fatal(http.ListenAndServe(":"+*portFlag, mux))
}

func generateStaticHTML(f *os.File, view templ.Component) error {
	f.WriteString(`<!-- 
		This file was generated by 'main.go'.
		Please edit the corresponding .templ files instead. In 'template/'
	-->
	`)

	return view.Render(context.Background(), f)
}
